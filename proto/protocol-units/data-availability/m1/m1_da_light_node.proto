syntax = "proto3";
package m1_da_light_node;

// Request and response messages
message Empty {}

message StreamReadRequest {
    uint64 start_height = 1;
}
  
message BlobRequest {
    string blob_id = 1;
}
  
message BlobResponse {
    string blob_id = 1;
    bytes data = 2;
    uint64 height = 3;
}
  
message BlobWriteRequest {
    bytes data = 1;
}
  
message WriteResponse {
    BlobResponse blob = 1;
}
  
message ReadAtHeightRequest {
    uint64 height = 1;
}
  
message BatchReadRequest {
    repeated uint64 heights = 1;
}
  
message BatchReadResponse {
    repeated BlobResponse blobs = 1;
}
  
message BatchWriteRequest {
    repeated bytes data = 1;
}
  
message BatchWriteResponse {
    repeated BlobResponse blobs = 1;
}
  
enum VerificationMode {
    COWBOY = 0;
    VALIDATOR_IN = 1;
    M_OF_N = 2;
}
  
message VerificationParametersRequest {
    VerificationMode mode = 1;
    repeated string signers = 2;
    uint32 m = 3;
    uint32 n = 4;
}
  
message UpdateResponse {
    VerificationMode mode = 1;
}

// LightNode service definition
service LightNode {
  // Stream blobs from a specified height or from the latest height.
  rpc StreamReadFromHeight (StreamReadRequest) returns (stream BlobResponse);
  rpc StreamReadLatest (Empty) returns (stream BlobResponse);
  
  // Stream blobs out, either individually or in batches.
  rpc StreamWriteBlob (stream BlobWriteRequest) returns (stream WriteResponse);
  
  // Read blobs at a specified height.
  rpc ReadAtHeight (ReadAtHeightRequest) returns (BatchReadResponse);
  
  // Batch read and write operations for efficiency.
  rpc BatchRead (BatchReadRequest) returns (BatchReadResponse);
  rpc BatchWrite (BatchWriteRequest) returns (BatchWriteResponse);
  
  // Update and manage verification parameters.
  rpc UpdateVerificationParameters (VerificationParametersRequest) returns (UpdateResponse);
}
